<beast version="2.0" namespace="beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions">


       
    <!-- tree priors -->
    <mergewith point='sb3TreePriorTemplates'>
	
	
	
	
	
	
        <!-- YuleSkylineCollapse -->
        <subtemplate id='YuleSkylineCollapse' class='speedemon.YuleSkylineCollapse' mainid='YuleSkylineCollapse.t:$(n)'  
						suppressInputs='biceps.EpochTreeDistribution.groupSizes'>
<![CDATA[
            <parameter id="YuleSkylineCollapseBirthRateRate.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0</parameter>
            <parameter id="collapseWeight.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode" upper="1.0">0.5</parameter>
             
            <distribution id="YuleSkylineCollapse.t:$(n)" spec="speedemon.YuleSkylineCollapse" 
                        epsilon="1.0E-4" 
                        weight="@collapseWeight.t:$(n)"
                        linkedMean="true"
                        birthRateShape="2"
                        birthRateRate="@YuleSkylineCollapseBirthRateRate.t:$(n)"
                        equalEpochs="true" tree="@Tree.t:$(n)"                       
                        groupCount="4"/>

            <prior id="YuleSkylineCollapseBirthRateRatePrior.t:$(n)" name="distribution" x="@YuleSkylineCollapseBirthRateRate.t:$(n)">
                    <LogNormal meanInRealSpace="true" name="distr" M="1.0" S="1.25"/>
            </prior>

            <prior id="collapseWeight.prior.t:$(n)" name="distribution" x="@collapseWeight.t:$(n)">
                    <Beta name="distr" alpha="1.0" beta="3.0"/>
            </prior>

			
			<operator id="AdaptableOperatorSampler.YuleSkylineCollapseBirthRateRate.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="YuleSkylineCollapseBirthRateRate.t:$(n)"/>
				<operator id="Scale.BirthDeathCollapseModel.t:$(n)" spec="BactrianScaleOperator" parameter="@YuleSkylineCollapseBirthRateRate.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.BirthDeathCollapseModel.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@YuleSkylineCollapseBirthRateRate.t:$(n)" prior2="@YuleSkylineCollapseBirthRateRatePrior.t:$(n)" weight="1.0"/>
    	</operator>
			
			<operator id="AdaptableOperatorSampler.collapseWeight.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="collapseWeight.t:$(n)"/>
				<operator id="Scale.collapseWeight.t:$(n)" spec="BactrianIntervalOperator" parameter="@collapseWeight.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.collapseWeight.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@collapseWeight.t:$(n)" prior2="@collapseWeight.prior.t:$(n)" weight="1.0"/>
			</operator>
	
			
			
]]>



            <connect srcID='YuleSkylineCollapse.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Yule
                Skyline Collapse speciation prior on tree t:$(n)
            </connect>
            <connect srcID='YuleSkylineCollapseBirthRateRate.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(YuleSkylineCollapseBirthRateRate.t:$(n)) and YuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>
            <connect srcID='collapseWeight.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(collapseWeight.t:$(n)) and collapseWeight.t:$(n)/estimate=true'/>

            <connect srcID='YuleSkylineCollapseBirthRateRatePrior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and YuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Yule Skyline Collapse speciation process birth rate of t:$(n)
            </connect>
			
			 <connect srcID='collapseWeight.prior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and collapseWeight.t:$(n)/estimate=true'>
                Yule Skyline Collapse weight prior of t:$(n)
            </connect>
			
            <connect srcID='AdaptableOperatorSampler.YuleSkylineCollapseBirthRateRate.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and YuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Adaptively operate on speciation rate gamma-rate for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
			<connect srcID='AdaptableOperatorSampler.collapseWeight.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and collapseWeight.t:$(n)/estimate=true'>
                Adaptively operate on collapse weight for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
           

            <connect srcID='YuleSkylineCollapse.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='collapseWeight.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and collapseWeight.t:$(n)/estimate=true'/>
            <connect srcID='YuleSkylineCollapseBirthRateRate.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(YuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and YuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>

        </subtemplate>
		
		
		
		
		



    </mergewith>
</beast>


