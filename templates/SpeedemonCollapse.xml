<beast version="2.0" namespace="beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions">


	<!-- SNAPPER and general case -->
	<mergewith point='treePriorTemplates'>
	
	
	
        <!-- YuleSkylineCollapse -->
        <subtemplate id='YuleSkylineCollapse' class='speedemon.YuleSkylineCollapse' mainid='SPEEDEMONYuleSkylineCollapse.t:$(n)'  
						suppressInputs='speedemon.YuleSkylineCollapse.groupSizes'>
<![CDATA[
            <parameter id="SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0</parameter>
            <parameter id="SPEEDEMONcollapseWeight.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode" upper="1.0">0.5</parameter>
             
            <distribution id="SPEEDEMONYuleSkylineCollapse.t:$(n)" spec="speedemon.YuleSkylineCollapse" 
                        weight="@SPEEDEMONcollapseWeight.t:$(n)"
                        linkedMean="true"
                        birthRateShape="2"
                        birthRateRate="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)"
                        equalEpochs="true" tree="@Tree.t:$(n)"                       
                        groupCount="4">
					<parameter id="epsilon.speedemon.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="epsilon" upper="0.0">1.0E-4</parameter>
			</distribution>

            <prior id="YuleSkylineCollapseBirthRateRatePrior.t:$(n)" name="distribution" x="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)">
                    <LogNormal meanInRealSpace="true" name="distr" M="1.0" S="1.25"/>
            </prior>

            <prior id="collapseWeight.prior.t:$(n)" name="distribution" x="@SPEEDEMONcollapseWeight.t:$(n)">
                    <Beta name="distr" alpha="1.0" beta="3.0"/>
            </prior>

			
			<operator id="AdaptableOperatorSampler.SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)"/>
				<operator id="Scale.BirthDeathCollapseModel.t:$(n)" spec="BactrianScaleOperator" parameter="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.BirthDeathCollapseModel.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" prior2="@YuleSkylineCollapseBirthRateRatePrior.t:$(n)" weight="1.0"/>
			</operator>
			
			<operator id="AdaptableOperatorSampler.SPEEDEMONcollapseWeight.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="SPEEDEMONcollapseWeight.t:$(n)"/>
				<operator id="Scale.SPEEDEMONcollapseWeight.t:$(n)" spec="BactrianIntervalOperator" parameter="@SPEEDEMONcollapseWeight.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.SPEEDEMONcollapseWeight.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@SPEEDEMONcollapseWeight.t:$(n)" prior2="@collapseWeight.prior.t:$(n)" weight="1.0"/>
			</operator>
			
			
			<operator id="SPEEDEMONUniformThresholdOperator.t:$(n)" spec="speedemon.UniformThresholdOperator" epsilon="@epsilon.speedemon.t:$(n)" tree="@Tree.t:$(n)" weight="3.0"/>
			
	    	<operator id="SPEEDEMONEpochTop.t:$(n)" spec="biceps.operators.EpochFlexOperator" tree="@Tree.t:$(n)" weight="2.0" scaleFactor="0.1"/>
	    	<operator id="SPEEDEMONEpochAll.t:$(n)" spec="biceps.operators.EpochFlexOperator" tree="@Tree.t:$(n)" weight="2.0" scaleFactor="0.1" fromOldestTipOnly="false"/>      
    		<operator id="SPEEDEMONTreeFlex.t:$(n)" spec="biceps.operators.TreeStretchOperator" scaleFactor="0.01" tree="@Tree.t:$(n)" weight="2.0"/>

            <operator id='SPEEDEMONTreeRootScaler.t:$(n)' spec='beast.evolution.operators.BactrianScaleOperator' scaleFactor="0.1" weight="3" tree="@Tree.t:$(n)" rootOnly='true'/>
            <operator id='SPEEDEMONUniformOperator.t:$(n)' spec='beast.evolution.operators.BactrianNodeOperator' weight="30" tree="@Tree.t:$(n)"/>
            <operator id='SPEEDEMONSubtreeSlide.t:$(n)' spec='beast.evolution.operators.BactrianSubtreeSlide' weight="15" size="1.0" tree="@Tree.t:$(n)"/>
            <operator id='SPEEDEMONNarrow.t:$(n)' spec='Exchange' isNarrow='true' weight="15" tree="@Tree.t:$(n)"/>
            <operator id='SPEEDEMONWide.t:$(n)' spec='Exchange' isNarrow='false' weight="3" tree="@Tree.t:$(n)"/>
            <operator id='SPEEDEMONWilsonBalding.t:$(n)' spec='WilsonBalding' weight="3" tree="@Tree.t:$(n)"/>
	
			
			
]]>



            <connect srcID='SPEEDEMONYuleSkylineCollapse.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Yule
                Skyline Collapse speciation prior on tree t:$(n)
            </connect>
			
			<connect srcID='SPEEDEMONYuleSkylineCollapse.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Yule
                Skyline Collapse speciation prior on tree t:$(n)
            </connect>
			
            <connect srcID='SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>
            <connect srcID='SPEEDEMONcollapseWeight.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(SPEEDEMONcollapseWeight.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'/>

            <connect srcID='YuleSkylineCollapseBirthRateRatePrior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Yule Skyline Collapse speciation process birth rate of t:$(n)
            </connect>
			
			 <connect srcID='collapseWeight.prior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'>
                Yule Skyline Collapse weight prior of t:$(n)
            </connect>
			

			

			
			
			<connect srcID='SPEEDEMONcollapseWeight.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'/>
            <connect srcID='SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>

           

			<!-- Threshold operator -->
			<connect srcID='SPEEDEMONUniformThresholdOperator.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n))'>
                Move a species tree node across the boundary at epsilon to lump/split clusters
            </connect>
					 
					 
			<!-- BICEPS tree operators -->
			<connect srcID='SPEEDEMONEpochTop.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='SPEEDEMONEpochAll.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='SPEEDEMONTreeFlex.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='SPEEDEMONTreeRootScaler.t:$(n)'            targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales root node for tree t:$(n)</connect>
            <connect srcID='SPEEDEMONUniformOperator.t:$(n)'           targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Draws new internal node heights uniformally for tree t:$(n)</connect>
            <connect srcID='SPEEDEMONSubtreeSlide.t:$(n)'              targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs subtree slide rearrangement of tree t:$(n)</connect>
            <connect srcID='SPEEDEMONNarrow.t:$(n)'                    targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Narrow exchange performs local rearrangement of tree t:$(n)</connect>
            <connect srcID='SPEEDEMONWide.t:$(n)'                      targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Wide exchange performs global rearrangement of tree t:$(n)</connect>
            <connect srcID='SPEEDEMONWilsonBalding.t:$(n)'             targetID='mcmc' inputName='operator' if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs Wilson-Balding global rearrangement of tree t:$(n)</connect>
         
					 
					 
			<!-- Tree prior operators -->
			<connect srcID='AdaptableOperatorSampler.SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Adaptively operate on speciation rate gamma-rate for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
			<connect srcID='AdaptableOperatorSampler.SPEEDEMONcollapseWeight.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'>
                Adaptively operate on collapse weight for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
			
			

        </subtemplate>
		



	</mergewith>

       
    <!-- StarBeast3 only -->
    <mergewith point='sb3TreePriorTemplates'>
	
	
	
	
	
	
        <!-- YuleSkylineCollapse -->
        <subtemplate id='YuleSkylineCollapse' class='speedemon.YuleSkylineCollapse' mainid='SPEEDEMONYuleSkylineCollapse.t:$(n)'  
						suppressInputs='speedemon.YuleSkylineCollapse.groupSizes'>
<![CDATA[
            <parameter id="SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0</parameter>
            <parameter id="SPEEDEMONcollapseWeight.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="stateNode" upper="1.0">0.5</parameter>
             
            <distribution id="SPEEDEMONYuleSkylineCollapse.t:$(n)" spec="speedemon.YuleSkylineCollapse" 
                        weight="@SPEEDEMONcollapseWeight.t:$(n)"
                        linkedMean="true"
                        birthRateShape="2"
                        birthRateRate="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)"
                        equalEpochs="true" tree="@Tree.t:$(n)"                       
                        groupCount="4">
					<parameter id="epsilon.speedemon.t:$(n)" spec="parameter.RealParameter" lower="0.0" name="epsilon" upper="0.0">1.0E-4</parameter>
			</distribution>

            <prior id="YuleSkylineCollapseBirthRateRatePrior.t:$(n)" name="distribution" x="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)">
                    <LogNormal meanInRealSpace="true" name="distr" M="1.0" S="1.25"/>
            </prior>

            <prior id="collapseWeight.prior.t:$(n)" name="distribution" x="@SPEEDEMONcollapseWeight.t:$(n)">
                    <Beta name="distr" alpha="1.0" beta="3.0"/>
            </prior>

			
			<operator id="AdaptableOperatorSampler.SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)"/>
				<operator id="Scale.BirthDeathCollapseModel.t:$(n)" spec="BactrianScaleOperator" parameter="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.BirthDeathCollapseModel.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)" prior2="@YuleSkylineCollapseBirthRateRatePrior.t:$(n)" weight="1.0"/>
			</operator>
			
			<operator id="AdaptableOperatorSampler.SPEEDEMONcollapseWeight.t:$(n)" spec="orc.operators.AdaptableOperatorSampler" weight="3.0">
				<parameter idref="SPEEDEMONcollapseWeight.t:$(n)"/>
				<operator id="Scale.SPEEDEMONcollapseWeight.t:$(n)" spec="BactrianIntervalOperator" parameter="@SPEEDEMONcollapseWeight.t:$(n)" weight="1.0"/>
				<operator id="SampleFromPriorOperator.SPEEDEMONcollapseWeight.t:$(n)" spec="orc.operators.SampleFromPriorOperator" parameter="@SPEEDEMONcollapseWeight.t:$(n)" prior2="@collapseWeight.prior.t:$(n)" weight="1.0"/>
			</operator>
			
			
			<operator id="UniformThresholdOperator.speedemon.t:$(n)" spec="speedemon.UniformThresholdOperator" epsilon="@epsilon.speedemon.t:$(n)" tree="@Tree.t:$(n)" weight="10.0"/>
	
			
			
]]>



            <connect srcID='SPEEDEMONYuleSkylineCollapse.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Yule
                Skyline Collapse speciation prior on tree t:$(n)
            </connect>
			
			<connect srcID='SPEEDEMONYuleSkylineCollapse.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Yule
                Skyline Collapse speciation prior on tree t:$(n)
            </connect>
			
            <connect srcID='SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>
            <connect srcID='SPEEDEMONcollapseWeight.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and inposterior(SPEEDEMONcollapseWeight.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'/>

            <connect srcID='YuleSkylineCollapseBirthRateRatePrior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Yule Skyline Collapse speciation process birth rate of t:$(n)
            </connect>
			
			 <connect srcID='collapseWeight.prior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'>
                Yule Skyline Collapse weight prior of t:$(n)
            </connect>
			
            <connect srcID='AdaptableOperatorSampler.SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'>
                Adaptively operate on speciation rate gamma-rate for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
			<connect srcID='AdaptableOperatorSampler.SPEEDEMONcollapseWeight.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'>
                Adaptively operate on collapse weight for Yule Skyline Collapse prior of tree t:$(n)
            </connect>
			
			<connect srcID='UniformThresholdOperator.speedemon.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n))'>
                Move a species tree node across the boundary at epsilon to lump/split clusters
            </connect>
           

            <connect srcID='SPEEDEMONYuleSkylineCollapse.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='SPEEDEMONcollapseWeight.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and SPEEDEMONcollapseWeight.t:$(n)/estimate=true'/>
            <connect srcID='SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(SPEEDEMONYuleSkylineCollapse.t:$(n)) and inposterior(Tree.t:$(n)) and SPEEDEMONYuleSkylineCollapseBirthRateRate.t:$(n)/estimate=true'/>

        </subtemplate>
		


    </mergewith>
	
	
	
	
</beast>


